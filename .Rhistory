# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l"))
par(mfrow = c(2,2), mar = c(2,4,4,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l"))
par(mfrow = c(2,2), mar = c(4,4,1,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l"))
par(mfrow = c(2,2), mar = c(5,4,0.5,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l"))
par(mfrow = c(2,2), mar = c(2,4,0.5,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l"))
par(mfrow = c(2,2), mar = c(4,4,0.5,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l"))
par(mfrow = c(2,2), mar = c(4,4,0.5,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(3,4,1,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
install.packages("alr4")
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
?bty
??bty
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
??cex
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1, col = c("black", "red", "blue"), cex = 0.5
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1, cex.sub = 0.5, col = c("black", "red", "blue"),
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1,
col = c("black", "red", "blue"),
pt.cex=1, cex=0.5,
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1,
col = c("black", "red", "blue"),
pt.cex=1, cex=0.7,
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
# graph 1
with(data, plot(x = posixtime, y = Global_active_power,
ylab = "Global Active Power",  xlab = "", type = "l"))
# graph 2
with(data, plot(x = posixtime, y = Voltage,
ylab = "Voltage", xlab = "datetime", type = "l"))
# graph 3
with(data, plot(y = Sub_metering_1, x = posixtime, type = "l", col = "black",
xlab = "", ylab = "Energy sub metering"))
with(data, lines(y = Sub_metering_2, x = posixtime, type = "l", col = "red"))
with(data, lines(y = Sub_metering_3, x = posixtime, type = "l", col = "blue"))
legend("topright", bty = "n", lty = 1,
col = c("black", "red", "blue"),
pt.cex=1, cex=0.7, # change font of legend
legend = c("Sub metering 1", "Sub metering 2", "Sub metering 3"))
# graph 4
with(data, plot(x = posixtime, y = Global_reactive_power, type = "l",
xlab = "datetime"))
group4<-data.frame(time4=1:20,score4=c(50:59,80,85,90,95,100,105,110,115,120,125), interv4=(factor(rep(0:1,each=10)))) group4$score4<-jitter(group4$score4,factor=20) ggplot(group4, aes(time4, score4, color = factor(interv4))) +
geom_point() + stat_smooth(method = "lm") +
geom_vline(xintercept=c(threshold), linetype=3)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "20aa16af1209cd72c835",
secret = "e239e661f31a0f36596c0c8b754362fd5365082b")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
setwd("/home/alex29/Coursera/getdata-030/scripts")
dir()
acs <- read.csv("quiz2-question2.csv")
str(acs)
library(sqldf)
names(acs)
acs_subset1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
str(acs_subset1)
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
library(XML)
html <- htmlTreeParse(url, useInternalNodes = T)
str(html)
head(html)
html[[1]]
library(httr)
html2 <- GET(url)
str(html2)
head(html2)
content2 <- content(html2, as = "text")
str(content2)
head(content2)
content2[10, ]
parsedHtml <- htmlParse(content2, asText = TRUE)
str(parsedHtml)
head(parsedHtml)
nrow(content2)
head(content2)
content2[1:9]
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[10]
htmlCode[9]
for (i in c(10,20,30,100)) {
print(nchar(htmlCode[i]))
}
file <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
q5data <- read.fwf(file)
q5data <- read.fwf(file, widths = 5)
?read.fwf
head(file)
fwfile <- download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwfile <- download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "fwfile.for", method = "libcurl")
fwfile <- download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "fwfile.for", method = "libcurl")
fwfile <- download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "fwfile.for", method = "libcurl")
fwfile <- download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "fwfile.for", method = "curl")
head(fwfile)
fwfile_read <- readline(fwfile)
head(fwfile)
head(fwfile_read)
fwfile_read <- readLines(fwfile)
fwfile_read <- readLines(fwfile)
confwf <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
fwfile_read <- readLines(confwf)
close(confwf)
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "fwfile.for", method = "curl")
read.fwf("fwfile.for")
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 8, 10))
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 8, 10),
header = TRUE)
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 8, 10),
header = TRUE, sep = "    ")
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 8, 10),
header = TRUE, sep = "\s")
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 10, 10))
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 10, 10)
stringsAsFactors=FALSE)
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 10, 10, 10, 10, 10),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 10, 10, 10, 10, 10),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 9, -5, 8, -5, 7, -5, 8, -5, 8),
stringsAsFactors=FALSE)
head(fwdata)
data <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 9, -4, 9, -4, 9, -4, 9, -4, 9),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 12, 12, 12, 12, 12),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 12, 12, 12, 12, 14),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 12, 12, 12, 12, 14),
stringsAsFactors=FALSE, header = TRUE, sep = \t)
fwdata <- read.fwf("fwfile.for", skip = 3, widths = c(-1, 12, 12, 12, 12, 14),
stringsAsFactors=FALSE, header = TRUE, sep = "\t")
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 12, 12, 12, 12, 14),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 14, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4),
stringsAsFactors=FALSE)
head(fwdata)
fwdata <- read.fwf("fwfile.for", skip = 4, widths = c(-1, 14, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4),
stringsAsFactors=FALSE, strip.white = TRUE)
head(fwdata)
str(fwdata)
colSums(fwdata$V5)
summary(fwdata$V5)
colSums(fwdata)
colSums(fwdata$V5)
colSums(fwdata$V4)
summary(fwdata$V4)
sum(fwdata$V4)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "20aa16af1209cd72c835",
secret = "e239e661f31a0f36596c0c8b754362fd5365082b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos", gtoken)
names(jsonData)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos", gtoken)
names(jsonData)
myjsonfile <- content(req)
names(myjsonfile)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
myjson <- toJSON(req, pretty = TRUE)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
jsonData$created_at
names(jsonData$created_at)
content(req)????$created_at
content(req)$created_at
content(req)[1]
content(req)[1]$created_at
content(req)[[1]]$created_at
content(req)[[2]]$created_at
content(req)[[30]]$created_at
mycontent <- content(req)
mycontent[[i]]$created_at
for (i in 1:30) {
mycontent[[i]]$created_at
}
for (i in 1:30) {
mycontent[[i]]$created_at
}
content(req)[[1]][["created_at"]]
for (i in 1:30) {
mycontent[[i]][["created_at"]]
}
for (i in 1:30) {
print mycontent[[i]][["created_at"]]
}
for (i in 1:30) {
print(mycontent[[i]][["created_at"]])
}
mycontent[1]
print(mycontent[[i]][["name"]])
mycontent[1]
for (i in 1:30) {
print(mycontent[[i]][["name"]])
}
for (i in 1:30) {
print("i" + mycontent[[i]][["name"]])
}
for (i in 1:30) {
print(i + mycontent[[i]][["name"]])
}
for (i in 1:30) {
print(as.charachter(i) + mycontent[[i]][["name"]])
}
for (i in 1:30) {
numofsubset <- as.character(i)
print(numofsubset)
print(mycontent[[i]][["name"]])
}
mycontent[6]$created_at
mycontent[[6]]$created_at
setwd("/home/alex29/Плот/mydata/tec00127.tsv.gz")
setwd("/home/alex29/Плот/mydata/")
library(tidyr)
deficit_wide <- read.table("tec00127.tsv")
head(deficit_wide)
deficit_wide <- read.table("tec00127.tsv", header = TRUE)
head(deficit_wide)
library(reshape2)
proben <- melt(deficit_wide)
head(proben)
proben <- melt(deficit_wide, id.vars = c(X2003, X2004, X2005, X2006, X2007, X2008, X2009, X2010, X2011, X2012, X2013, X2014))
head(deficit_wide)
proben <- melt(deficit_wide, id.vars = c(X2003, X2004, X2005, X2006, X2007, X2008, X2009, X2010, X2011, X2012, X2013, X2014))
proben <- melt(deficit_wide, id.vars = c("X2003", "X2004", "X2005", "X2006", "X2007", "X2008", "X2009", "X2010", "X2011", "X2012", "X2013", "X2014"))
head(proben)
deficit_wide <- read.table("tec00127.tsv", header = TRUE, text=')
head(deficit_wide)
deficit_wide <- read.table("tec00127.tsv", header = TRUE, check.names = FALSE)
setwd("/home/alex29/Плот/mydata/tec00127.tsv.gz")
)
)
head(deficit_wide)
library(reshape2)
proben <- melt(deficit_wide, id.vars = c("X2003", "X2004", "X2005", "X2006", "X2007", "X2008", "X2009", "X2010", "X2011", "X2012", "X2013", "X2014"))
